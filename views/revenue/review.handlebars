<style>
body {background-color: #F5F6F5;}
    /* Icon pulse */
.requiredIcon {
    color: red;
}
.fa-pulse {
	display: inline-block;
	-moz-animation: pulse 2s infinite linear;
	-o-animation: pulse 2s infinite linear;
	-webkit-animation: pulse 2s infinite linear;
	animation: pulse 2s infinite linear;
}

@-webkit-keyframes pulse {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@-moz-keyframes pulse {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@-o-keyframes pulse {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@-ms-keyframes pulse {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
@keyframes pulse {
	0% { opacity: 1; }
	50% { opacity: 0; }
	100% { opacity: 1; }
}
</style>
<h4 class="fontColorStyle">Proposal Review</h4>
<hr>

<div class="container">
  <div id="heroBanner" class="jumbotron mb-4 mt-4">
    <div class="container">
      <h1 class="display-4">{{group.name}}</h1>
      <p class="text-muted">
        A {{group.marketType}} market segment group arriving on <span class="reviewTimeStyle">{{arrivalDayOfWeek}}, {{arrivalMonth}} {{arrivalDayOfWeekNumber}} {{arrivalYear}}</span> and departing on <span class="reviewTimeStyle">{{departureDayOfWeek}}, {{departureMonth}} {{departureDayOfWeekNumber}} {{departureYear}}</span>.
      </p>
      {{#if repeatGuestFlag}}
      <p>This client has stayed with us before. <i class="fas fa-redo fa-spin ml-1"></i></p>
      {{else}}
      <p>This is the first time this client has stayed with us.</p>
      {{/if}}
      <p class="text-muted">Submitted by {{group.user.name}} on {{submissionTime}}.</p>
    </div>
  </div> 

  <div class="container">
    <div class="row">
      <div class="card text-center" style="width:100%">
        <div class="card-header"><i class="fas fa-stream"></i> Rooms & Rates</div>
        <div class="card-body">
          <div id="insertFormDynamically"></div>
        </div>
      </div>
    </div>

    
    

    <div class="row card-group mt-4 mb-4">
      <div class="card text-center">
        <div class="card-header"><i class="fas fa-hotel"></i> Conference Space</div>
        <div class="card-body">
          <p>Requested? {{group.conferenceSpace}}</p>
          <p>Revenue: ${{group.conferenceRevenue}}</p>
        </div>
      </div>

      <div class="card text-center">
        <div class="card-header"><i class="fas fa-file-signature"></i> Attrition & Requirements</div>
        <div class="card-body">
          <p class="card-text">Attrition %: {{group.attritionPercentage}}</p>
          <p class="card-text">Cut Off: {{cutOffDateFormatted}}</p>
          <p class="card-text">Decision Due By: {{decisionDueDateFormatted}}</p>
          {{#if decisionAlert}}
          <i class="fas fa-exclamation-triangle requiredIcon fa-pulse"></i><span style="font-size: 0.6em"> Decision Due Date approaching!</span>
          {{/if}}
        </div>
      </div>

      <div class="card">
        <div class="card-body"> 
          <p style="float:left; font-size:3em; color:green; word-wrap:break-word"><i class="far fa-money-bill-alt"></i></p>
          <p class="card-text" style="float:right; margin-top:15px; font-size:2em; word-wrap:break-word">${{totalRevenue}}</p>
          <div style="clear:both;"></div>
          <hr>
          <p class="text-muted" style="text-align:center">Anticipated Group Revenue</p>
        </div>
      </div>
    </div>
  </div>

  <div class="container">
    <div class="row card-group mt-4 mb-4">

      <div class="card text-center">
        <div class="card-header"><i class="fas fa-pencil-alt"></i>Additional Notes</div>
        <div class="card-body">
          <p class="card-text">{{group.otherNotes}}</p>
        </div>
      </div>


        <div class="card text-center">
        <div class="card-header"><i class="far fa-handshake"></i> Concessions</div>
        <div class="card-body">
          <p class="card-text">{{group.concessionField}}</p>
        </div>
      </div>

    </div>
  </div>



</div>





<div id="reviewBtnContainer" class="container mt-4 mb-4">
  <button id="confirmPurposal" class="btn btn-success mr-4"><i class="far fa-thumbs-up"></i> Approve</button>
  <button id="denyPurposal" class="btn btn-danger"><i class="far fa-thumbs-down"></i> Deny</button>
</div>





<div class="container mb-4">
  <div class="card">
      <div class="card-body">
        <span class="card-title"><i class="fas fa-comments"></i> Add Comment</span>
        <form action="/revenue/review/comment/{{group.id}}" method="post">
          <div>
            <textarea class="form-control" name="commentBody"></textarea>
          </div>
          <input class="btn btn-primary mt-2" type="submit" value="Submit">
        </form>
      </div>
  </div>
  {{#each group.comments}}
  <div class="card">
    <div class="card-body">
      <h5>{{commentBody}}</h5>
      <div class="commentSignature">
        <span id="userNameSpanStyle" class="ml-1">{{commentUser.name}}</span> 
        <span class="userBadge mb-1">{{commentUser.role}}</span> 
      </div>
      <br>
      <small>Posted: {{commentDate}}</small>
    </div>
  </div>
  {{/each}}
</div>


<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
  let confirmPurposalButton = document.getElementById('confirmPurposal');
  let denyPurposalButton = document.getElementById('denyPurposal');
  let submitFeedbackButton = document.getElementById('feedbackPurposal');
  denyPurposalButton.addEventListener('click', denyPurposalHandler);
  confirmPurposalButton.addEventListener('click', confirmPurposalHandler);

  function confirmPurposalHandler() {
      swal({
      title: "Approve Proposal?",
      text: "Approving this proposal will allow the sales agent to submit a contract to the client.",
      icon: "warning",
      buttons: true,
      dangerMode: true,
    })
    .then((willApprove) => {
      if (willApprove) {
        swal("Proposal approved!", {
          icon: "success",
        })
        .then(() => {
        let payload = {
          id: '{{group.id}}',
          status: 'Approved'
        }
        fetchFunction(payload);
        })
      } else {
        swal("Action canceled.");
      }
    });
  }

    function denyPurposalHandler() {
      swal({
      title: "Deny Proposal?",
      text: "Denying this proposal will stop any further progress with this client.",
      icon: "error",
      buttons: true,
      dangerMode: true,
    })
    .then((willApprove) => {
      if (willApprove) {
        swal("Proposal denied.", {
          icon: "success",
        })
        .then(() => {
        let payload = {
          id: '{{group.id}}',
          status: 'Denied'
        }
        fetchFunction(payload);
        })
      } else {
        swal("Action canceled.");
      }
    });
  }

  function fetchFunction(data) {
    fetch('https://groupify.app/revenue/review/update', {
    method: 'put',
    mode: 'cors',
    headers: {
      'Accept':'application/json, text/plain, */*',
      'Content-type': 'application/json',
    },
    body: JSON.stringify({data})
  })
    .then((res) => res.json())
    .catch((err) => console.log(err));
  }

  // Create holding container for room type, rate and nights
  let holdingContainer = document.getElementById('insertFormDynamically');
  let checkLen = '{{group.roomType.length}}';
  // create inner div and dynamically add the input fields 
  // need to change input fields so they can't be edited 
  if(checkLen > 0) {
      for(let i = 0; i < checkLen; i++) {
          let container = document.createElement('div');
          container.innerHTML = `
              <div class="row" id="row-${i}">
                      <div class="form-group col">
                      <label for="roomTypeSelect-${i}">Room Type:</label>
                      <span id="roomTypeSelect-${i}" name="roomTypeSelect-${i}"></span>
                      </div>
                      <div class="form-group col">
                      <label style="margin-left:-12px" for="bestAvailableRate-${i}">Best Available Rate: $</label>
                      <span style="margin-left:0px" id="bestAvailableRate-${i}" name="bestAvailableRate-${i}"></span>  
                      </div>
                      <div class="form-group col">
                      <label for="purposedRate-${i}">Proposed Rate: $</label>
                      <span id="purposedRate-${i}" name="purposedRate-${i}"></span>  
                      </div>
                        <div class="form-group col">
                      <label for="discountPercentage-${i}">Discount %:</label>
                      <span id="discountPercentage-${i}" name="discountPercentage-${i}"></span>
                      </div>
                      <div class="form-group col">
                      <label for="roomsPerNight-${i}">Rooms per Night:</label>
                      <span id="roomsPerNight-${i}" name="roomsPerNight-${i}"></span>
                      </div>
                  </div>
                  <hr class="hrShadowStyle">
          `;
          insertAfter(container,holdingContainer);
      }
  }
  // add the room type, night and other values to input fields from data source
  let rateValues = '{{group.purposedRate}}',
      rateArray = rateValues.split(','),
      roomsValues = '{{group.roomsPerNight}}',
      roomsArray = roomsValues.split(','),
      typeValues = '{{group.roomType}}',
      typeArray = typeValues.split(','),
      bestAvailableValues = '{{group.bestAvailableRate}}',
      bestAvailableArray = bestAvailableValues.split(','),
      discountPercentageValues = '{{group.discountPercentage}}',
      discountArray = discountPercentageValues.split(',');
  for(let i = 0; i < checkLen; i++) {
      let purposedRateInput = document.getElementById('purposedRate-' + i);
      let roomsPerNightInput = document.getElementById('roomsPerNight-' + i);
      let roomTypeInput = document.getElementById('roomTypeSelect-' + i);
      let bestAvailableRateInput = document.getElementById('bestAvailableRate-' + i);
      let discountPercentageInput = document.getElementById('discountPercentage-' + i);
      roomTypeInput.innerText = typeArray[i];
      purposedRateInput.innerText = rateArray[i];
      roomsPerNightInput.innerText = roomsArray[i];
      bestAvailableRateInput.innerText = bestAvailableArray[i];
      discountPercentageInput.innerText = discountArray[i];  
  }

let userArray = document.querySelectorAll('.userBadge');
let userArrayFormatted = Array.from(userArray);

formatUserBadge(userArrayFormatted)

function formatUserBadge(array) {
  for(let i = 0; i < array.length; i++) {
    if(array[i].innerText === 'Revenue Manager') {
      array[i].classList.add('badge', 'badge-pill', 'revenueBadge')
      
      array[i].innerHTML = `<i class="fas fa-dollar-sign"></i> Revenue Manager`;
    }
    else if(array[i].innerText === 'Sales Agent') {
      array[i].classList.add('badge', 'badge-pill', 'salesBadge')
      array[i].innerHTML = `<i class="fas fa-bolt"></i> Sales Agent`;
    }
  }
}

  function insertAfter(newNode, referenceNode) {
    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);
  }
   
</script>
