<style>
  body {background-color: #F5F6F5;}
</style>
<h4 class="fontColorStyle">Proposal Status</h4>
<hr>

  <div id="heroBanner" class="jumbotron mb-4 mt-4">
    <div class="container">
      <h1 class="display-4">{{group.name}} <a style="font-size:23px;" title="Edit Details" href="/groups/edit/{{group.id}}"><i class="fas fa-pencil-alt"></i></a></h1>
      <p class="text-muted">
        A {{group.marketType}} market segment group arriving on <span class="reviewTimeStyle">{{arrivalDate}}</span> and departing on <span class="reviewTimeStyle">{{departureDate}}</span>.
      </p>
      <p class="text-muted">Submitted on {{submissionTime}}.</p>
    </div>
  </div>
  
  <div class="container">

    <div class="card-deck">

      <div class="card text-center">
        <div class="card-header">Client Status</div>
          <div class="card-body">
            <p><em id="clientStatusParagraph">{{group.clientStatus}}</em></p>
            <div class="form-group">
              <label for="statusUpdateSelect"></label>
                <select class="form-control" id="statusUpdateSelect">
                  <option disabled selected>Update Status</option>
                  <option>Confirmed</option>
                  <option>Pending</option>
                  <option>Canceled</option>
                </select>
            </div>
              <div id="cancelDiv"></div>
              <button id="submitChangeStatusBtn" class="btn btn-primary">Update Status</button>
          </div>
        </div>


      <div class="card text-center ">
        <div class="card-header">Revenue Manager Status:</div>
        <div class="card-body">
          <p class="card-text"><em>{{group.managerStatus}}</em></p>
        </div>
      </div>

      <div class="card text-center">
        <div class="card-header">Contract</div>
        <div class="card-body">
          <p class="card-text"><em>Uploader goes here</em></p>
        </div>
      </div>

    </div>

  </div>
















  <div class="container">
    <div id="commentContainer">
      <div class="card">
        <div class="card-body">
          <span class="card-title">Comments</span>
          <form action="/groups/comment/{{group.id}}" method="post">
            <div>
              <textarea class="form-control" name="commentBody"></textarea>
              <label><i class="fas fa-comment"></i> Add Comment</label>
            </div>
            <input class="btn btn-primary" type="submit" value="Submit">
          </form>
        </div>
      </div>
      {{#each group.comments}}
      <div class="card">
        <div class="card-body">
          <h5>{{commentBody}}</h5>
          <div class="commentSignature">
            <span id="userNameSpanStyle" class="ml-1">{{commentUser.name}}</span> 
            <span class="userBadge mb-1">{{commentUser.role}}</span>
          </div>
          <br>
          <small>Posted: {{commentDate}}</small>
        </div>
      </div>
      {{/each}}
    </div>
  </div>


<script>
let buttonSubmit = document.getElementById('submitChangeStatusBtn');
let statusSelect = document.getElementById('statusUpdateSelect');
let clientStatusParagraph = document.getElementById('clientStatusParagraph');
let statusSelectOption;
let cancelTextCreated;
buttonSubmit.disabled = true;

let userArray = document.querySelectorAll('.userBadge');
let userArrayFormatted = Array.from(userArray);
formatUserBadge(userArrayFormatted);

function formatUserBadge(array) {
  for(let i = 0; i < array.length; i++) {
    if(array[i].innerText === 'Revenue Manager') {
      array[i].classList.add('badge', 'badge-pill', 'revenueBadge')
      
      array[i].innerHTML = `<i class="fas fa-dollar-sign"></i> Revenue Manager`;
    }
    else if(array[i].innerText === 'Sales Agent') {
      array[i].classList.add('badge', 'badge-pill', 'salesBadge')
      array[i].innerHTML = `<i class="fas fa-bolt"></i> Sales Agent`;
    }
  }
};



// Add or remove cancelation field on change event
statusSelect.addEventListener('change', () => {
  statusSelectOption = statusSelect.options[statusSelect.selectedIndex].text;
  if(statusSelectOption == 'Canceled') {
    cancelTextCreated = true;

    let cancelContainer = document.getElementById('cancelDiv');
    cancelContainer.innerHTML = `
      <div class="form-group" id="cancelationReasonDiv">
        <label for="roomTypeSelect">Cancelation Reason</label>
          <select id="cancelationReasonSelect" class="form-control" name="cancelationReasonSelect">
              <option selected disabled>Choose...</option>
              <option>Rates to high</option>
              <option>Rooms unavailable</option>
              <option>Conference space unavailable</option>
              <option>Conference space too small/limited</option>
              <option>Not enough large units</option>
        </select>
      </div>
    `;
    // need to protect against blind submission here // the choose... option
      buttonSubmit.disabled = false;  
  }
  else if(statusSelectOption == 'Confirmed' || statusSelectOption == 'Pending' ) {
    buttonSubmit.disabled = false;
    if(cancelTextCreated == true) {
      let cancelInput = document.getElementById('cancelationReasonDiv');
      cancelInput.remove();
      cancelTextCreated = false;
    }
  }
});

buttonSubmit.addEventListener('click', submitUpdate);

// Submit Cancelation Reason
function submitUpdate(e) {
  let statusSelect = document.getElementById('statusUpdateSelect');
  let statusSelectOption = statusSelect.options[statusSelect.selectedIndex].text;

  let payload = {
  id: '{{group.id}}',
  status: statusSelectOption
}   

  let cancelSelectOption = document.getElementById('cancelationReasonSelect');
  // need to protect against the default select option
  if(cancelSelectOption != null) {
      payload = {
      id: '{{group.id}}',
      status: statusSelectOption,
      cancelationReason: cancelSelectOption.options[cancelSelectOption.selectedIndex].text,
    }
  }

  fetch('http://localhost:3000/groups/update/status', {
    method: 'put',
    mode: 'cors',
    headers: {
      'Accept':'application/json, text/plain, */*',
      'Content-type': 'application/json',
    },
    body: JSON.stringify({payload})
  })
    .then((res) => res.json())
    .catch((err) => console.log(err))
    .then(response => console.log(response))
    .then(() => {
      clientStatusParagraph.innerText = statusSelectOption;
      clientStatusParagraph.classList.add('colorFlash');
      setTimeout(() => {
        clientStatusParagraph.classList.remove('colorFlash')
      },1000);
    })
    e.preventDefault();
};

// if group has already been canceled, generate input field with existing reason
  let updatedStatus = '{{group.clientStatus}}';
  let cancelationReason = '{{group.cancelationReason}}'
  if(updatedStatus == 'Canceled' && cancelationReason != '') {
    cancelTextCreated = true;
    let cancelContainer = document.getElementById('cancelDiv');
    cancelContainer.innerHTML = `
      <div class="form-group" id="cancelationReasonDiv">
        <label for="roomTypeSelect">Cancelation Reason</label>
          <select id="cancelationReasonSelect" class="form-control" name="cancelationReasonSelect">
              <option selected disabled>Choose...</option>
              <option>Rates to high</option>
              <option>Rooms unavailable</option>
              <option>Conference space unavailable</option>
              <option>Conference space too small/limited</option>
              <option>Not enough large units</option>
        </select>
      </div>
    `;
    // Loop through select options until we match the one coming from the DB
    let options = cancelationReasonSelect.options;
    for(var i = 0; i < options.length; i++) {
      if(options[i].value === cancelationReason) {
       cancelationReasonSelect.selectedIndex = i;
      }
    }
  };

  


</script>
